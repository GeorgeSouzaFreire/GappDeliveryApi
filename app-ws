const WebSocket = require('ws');

function corsValidation(origin) {
    return process.env.CORS_ORIGIN === '*' || process.env.CORS_ORIGIN.startsWith(origin);
}

function verifyClient(info, callback) {
    /*if (!corsValidation(info.origin)) return callback(false);

    const token = info.req.url.split('token=')[1];

    console.log(token);

    if (token) {
        if (token === process.env.GAPP_DELYVERY_ACCESS_KEY_SECRET)
            return callback(true);
    }*/

    return callback(true);
}

function broadcast(wss, data) {
    wss.clients.forEach(client => {
        if (client.readyState === WebSocket.OPEN) {
            client.send(JSON.stringify(data));
        }
    });
}

module.exports = (server) => {
    const wss = new WebSocket.Server({ server, verifyClient });

    wss.broadcast = function (data) {
        console.log(this.clients.size)
        for (var i in this.clients) {
            console.log(this.clients[i]);
            console.log(this.clients[i]);
            this.clients[i].send(data);
        }
    };
    wss.on('connection', function (ws) {
        ws.on('message', function (data) {
            ws.send('{}' + data);
            wss.broadcast('Hi All');
        });
        ws.on('close', function () {
            console.log('Connection closed!');
        });
        ws.on('error', function (err) {
            console.error(`onError: ${err.message}`);
        });
    });
   
    console.log(`App Web Socket Server is running!`);
    return wss;
}